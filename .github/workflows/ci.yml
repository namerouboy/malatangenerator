#ワークフロー名
name: Rails CI

#ワークフローの実行タイミング
on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

#ジョブの定義
jobs:
  test:
    #動作するOSの指定
    runs-on: ubuntu-latest

    #使用する外部サービス名の指定(Postgreを使用)
    services:
      postgres:
        #dockerイメージのバージョン
        image: postgres:13
        #postgreのポート番号、ユーザ名、パスワード
        #CI用のDB環境は毎回新しいDockerコンテナとして起動されるので、ここだけで自由に決めてよい。
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        #postgreのヘルスチェック
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      #ジョブ内で使われる環境変数
      RAILS_ENV: test
      DATABASE_URL: postgres://postgres:password@localhost:5432/test_db

    #処理の開始
    steps:
      #対象ブランチをクローン
    - uses: actions/checkout@v4

      #日本語フォントのインストール(CI環境には日本語フォントがインストールされていない)
    - name: Install Japanese fonts
      run: |
        sudo apt-get update
        sudo apt-get install -y fonts-ipafont-gothic

      #Rubyのセットアップ
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.4.2 
        bundler-cache: true #Gemをキャッシュして、次回以降高速化
      
      #DBのセットアップ
    - name: Set up database
      #GitHub Actions用に用意したDB設定ファイルを本番用と同じ場所に設置
      #dbの作成とマイグレーションの実行
      run: |
        cp config/database.yml.github-actions config/database.yml
        bundle exec rails db:prepare

      #rspec/フォルダにあるテストファイルを実行する
    - name: Run tests
      run: bundle exec rspec

      #chromeのセットアップ
    - name: Set up Chrome for Capybara
      uses: browser-actions/setup-chrome@v1

      #schema.rbの実行、seedファイルの適用
    - name: Prepare DB
      run: |
        bundle exec rails db:schema:load RAILS_ENV=test
        bundle exec rails db:seed RAILS_ENV=test

      #rspec/systemフォルダにあるテストファイルを実行する
    - name: Run system specs
      run: bundle exec rspec spec/system

      #rspec/modelフォルダにあるテストファイルを実行する
    - name: Run model specs
      run: bundle exec rspec spec/models

      #テスト失敗時に、スクリーンショットをアップロードする
    - name: Upload Capybara screenshots
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: capybara-screenshots
        path: tmp/capybara
